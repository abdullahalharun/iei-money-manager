// datasource and generator
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Multi-tenant ready: include tenantId on core tables
model Tenant {
  id          String      @id @default(cuid())
  name        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  users       User[]
  accounts    Account[]
  categories  Category[]
  transactions Transaction[]
  budgets     Budget[]
  investments Investment[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  name      String
  type      String
  balance   Decimal  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactions Transaction[]
}

model Category {
  id        String   @id @default(cuid())
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  name      String
  kind      CategoryKind
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactions Transaction[]
}

enum CategoryKind {
  INCOME
  EXPENSE
  INVEST
}

model Transaction {
  id         String   @id @default(cuid())
  tenantId   String
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  accountId  String
  account    Account  @relation(fields: [accountId], references: [id])
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])
  amount     Decimal
  note       String?
  occurredAt DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Budget {
  id         String   @id @default(cuid())
  tenantId   String
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  name       String
  amount     Decimal
  period     String   // e.g., monthly, quarterly
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Investment {
  id         String   @id @default(cuid())
  tenantId   String
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  name       String
  amount     Decimal
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

